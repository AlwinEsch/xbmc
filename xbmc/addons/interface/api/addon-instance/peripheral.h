/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/addon-instance/peripheral.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addoninstance_peripheral_h;
struct directFuncToKodi_addoninstance_peripheral_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_addoninstance_peripheral_h : public IMsgHdl
{
public:
  CHdl_kodi_addoninstance_peripheral_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_addoninstance_peripheral_h* ifcToKodi,
                  directFuncToAddon_addoninstance_peripheral_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon
  KODI_ADDON_PERIPHERAL_HDL kodi_addon_peripheral_create_v1(
      KODI_OWN_HDL kodi_hdl); // Added with API 1

  void kodi_addon_peripheral_destroy_v1(KODI_ADDON_PERIPHERAL_HDL hdl); // Added with API 1

  void kodi_addon_peripheral_get_capabilities_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      struct PERIPHERAL_CAPABILITIES* capabilities); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_perform_device_scan_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      struct PERIPHERAL_INFO** scan_results,
      size_t* peripheral_count); // Added with API 1

  void kodi_addon_peripheral_free_scan_results_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                                  struct PERIPHERAL_INFO* scan_results,
                                                  size_t peripheral_count); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_get_events_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      struct PERIPHERAL_EVENT** events,
      size_t* event_count); // Added with API 1

  void kodi_addon_peripheral_free_events_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                            struct PERIPHERAL_EVENT* events,
                                            size_t event_count); // Added with API 1

  bool kodi_addon_peripheral_send_event_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl, const struct PERIPHERAL_EVENT* event); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_get_joystick_info_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      unsigned int index,
      struct JOYSTICK_INFO* info); // Added with API 1

  void kodi_addon_peripheral_free_joystick_info_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                                   struct JOYSTICK_INFO* info); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_get_features_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      const struct JOYSTICK_INFO* joystick,
      const char* controller_id,
      struct JOYSTICK_FEATURE** features,
      size_t* feature_count); // Added with API 1

  void kodi_addon_peripheral_free_features_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                              struct JOYSTICK_FEATURE* features,
                                              size_t feature_count); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_map_features_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      const struct JOYSTICK_INFO* joystick,
      const char* controller_id,
      const struct JOYSTICK_FEATURE* features,
      size_t feature_count); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_get_ignored_primitives_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      const struct JOYSTICK_INFO* joystick,
      struct JOYSTICK_DRIVER_PRIMITIVE** primitives,
      size_t* primitive_count); // Added with API 1

  void kodi_addon_peripheral_free_primitives_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                                struct JOYSTICK_DRIVER_PRIMITIVE* primitives,
                                                size_t primitive_count); // Added with API 1

  enum PERIPHERAL_ERROR kodi_addon_peripheral_set_ignored_primitives_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl,
      const struct JOYSTICK_INFO* joystick,
      const struct JOYSTICK_DRIVER_PRIMITIVE* primitives,
      size_t primitive_count); // Added with API 1

  void kodi_addon_peripheral_save_button_map_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl, const struct JOYSTICK_INFO* joystick); // Added with API 1

  void kodi_addon_peripheral_revert_button_map_v1(
      KODI_ADDON_PERIPHERAL_HDL hdl, const struct JOYSTICK_INFO* joystick); // Added with API 1

  void kodi_addon_peripheral_reset_button_map_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                                 const struct JOYSTICK_INFO* joystick,
                                                 const char* controller_id); // Added with API 1

  void kodi_addon_peripheral_power_off_joystick_v1(KODI_ADDON_PERIPHERAL_HDL hdl,
                                                   unsigned int index); // Added with API 1


private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static void kodi_addon_peripheral_trigger_scan_v1(void* thisClassHdl,
                                                    KODI_OWN_HDL hdl); // Added with API 1

  static void kodi_addon_peripheral_refresh_button_maps_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const char* device_name,
      const char* controller_id); // Added with API 1

  static unsigned int kodi_addon_peripheral_feature_count_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const char* controller_id,
      enum JOYSTICK_FEATURE_TYPE type); // Added with API 1

  static enum JOYSTICK_FEATURE_TYPE kodi_addon_peripheral_feature_type_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const char* controller_id,
      const char* feature_name); // Added with API 1


  directFuncToAddon_addoninstance_peripheral_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
