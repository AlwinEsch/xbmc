/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/addon-instance/pvr.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addoninstance_pvr_h;
struct directFuncToKodi_addoninstance_pvr_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_addoninstance_pvr_h : public IMsgHdl
{
public:
  CHdl_kodi_addoninstance_pvr_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_addoninstance_pvr_h* ifcToKodi,
                  directFuncToAddon_addoninstance_pvr_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon
  enum PVR_ERROR kodi_addon_pvr_get_capabilities_v1(
      KODI_ADDON_PVR_HDL hdl, struct PVR_ADDON_CAPABILITIES* capabilities); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_backend_name_v1(KODI_ADDON_PVR_HDL hdl,
                                                    char* str,
                                                    size_t mem_size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_backend_version_v1(KODI_ADDON_PVR_HDL hdl,
                                                       char* str,
                                                       size_t mem_size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_backend_hostname_v1(KODI_ADDON_PVR_HDL hdl,
                                                        char* str,
                                                        size_t mem_size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_connection_string_v1(KODI_ADDON_PVR_HDL hdl,
                                                         char* str,
                                                         size_t mem_size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_drive_space_v1(KODI_ADDON_PVR_HDL hdl,
                                                   uint64_t* total,
                                                   uint64_t* used); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_call_settings_menu_hook_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_MENUHOOK* menuhook); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channels_amount_v1(KODI_ADDON_PVR_HDL hdl,
                                                       int* amount); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channels_v1(KODI_ADDON_PVR_HDL hdl,
                                                KODI_ADDON_PVR_TRANSFER_HDL handle,
                                                bool radio); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channel_stream_properties_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_CHANNEL* channel,
      struct PVR_NAMED_VALUE* properties,
      size_t* properties_count); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_signal_status_v1(
      KODI_ADDON_PVR_HDL hdl,
      int channel_uid,
      struct PVR_SIGNAL_STATUS* signal_status); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_descramble_info_v1(
      KODI_ADDON_PVR_HDL hdl,
      int channel_uid,
      struct PVR_DESCRAMBLE_INFO* descramble_info); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channel_groups_amount_v1(KODI_ADDON_PVR_HDL hdl,
                                                             int* amount); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channel_groups_v1(KODI_ADDON_PVR_HDL hdl,
                                                      KODI_ADDON_PVR_TRANSFER_HDL handle,
                                                      bool radio); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_channel_group_members_v1(
      KODI_ADDON_PVR_HDL hdl,
      KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_CHANNEL_GROUP* group); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_delete_channel_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_CHANNEL* channel); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_rename_channel_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_CHANNEL* channel); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_open_dialog_channel_settings_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_CHANNEL* channel); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_open_dialog_channel_add_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_CHANNEL* channel); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_open_dialog_channel_scan_v1(
      KODI_ADDON_PVR_HDL hdl); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_call_channel_menu_hook_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_MENUHOOK* menuhook,
      const struct PVR_CHANNEL* channel); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_epg_for_channel_v1(KODI_ADDON_PVR_HDL hdl,
                                                       KODI_ADDON_PVR_TRANSFER_HDL handle,
                                                       int channel_uid,
                                                       time_t start,
                                                       time_t end); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_is_epg_tag_recordable_v1(KODI_ADDON_PVR_HDL hdl,
                                                         const struct EPG_TAG* tag,
                                                         bool* is_recordable); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_is_epg_tag_playable_v1(KODI_ADDON_PVR_HDL hdl,
                                                       const struct EPG_TAG* tag,
                                                       bool* is_playable); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_epg_tag_edl_v1(KODI_ADDON_PVR_HDL hdl,
                                                   const struct EPG_TAG* tag,
                                                   struct PVR_EDL_ENTRY edl[],
                                                   size_t* size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_epg_tag_stream_properties_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct EPG_TAG* tag,
      struct PVR_NAMED_VALUE* properties,
      size_t* properties_count); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_set_epg_max_past_days_v1(KODI_ADDON_PVR_HDL hdl,
                                                         int past_days); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_set_epg_max_future_days_v1(KODI_ADDON_PVR_HDL hdl,
                                                           int future_days); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_call_epg_menu_hook_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_MENUHOOK* menuhook,
      const struct EPG_TAG* tag); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recordings_amount_v1(KODI_ADDON_PVR_HDL hdl,
                                                         bool deleted,
                                                         int* amount); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recordings_v1(KODI_ADDON_PVR_HDL hdl,
                                                  KODI_ADDON_PVR_TRANSFER_HDL handle,
                                                  bool deleted); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_delete_recording_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_RECORDING* recording); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_undelete_recording_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_RECORDING* recording); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_delete_all_recordings_from_trash_v1(
      KODI_ADDON_PVR_HDL hdl); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_rename_recording_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_RECORDING* recording); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_set_recording_lifetime_v1(
      KODI_ADDON_PVR_HDL hdl, const struct PVR_RECORDING* recording); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_set_recording_play_count_v1(KODI_ADDON_PVR_HDL hdl,
                                                            const struct PVR_RECORDING* recording,
                                                            int count); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_set_recording_last_played_position_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_RECORDING* recording,
      int last_played_position); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recording_last_played_position_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_RECORDING* recording,
      int* last_played_position); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recording_edl_v1(KODI_ADDON_PVR_HDL hdl,
                                                     const struct PVR_RECORDING* recording,
                                                     struct PVR_EDL_ENTRY edl[],
                                                     size_t* size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recording_size_v1(KODI_ADDON_PVR_HDL hdl,
                                                      const struct PVR_RECORDING* recording,
                                                      int64_t* size); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_recording_stream_properties_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_RECORDING* recording,
      struct PVR_NAMED_VALUE* properties,
      size_t* properties_count); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_call_recording_menu_hook_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_MENUHOOK* menuhook,
      const struct PVR_RECORDING* recording); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_timer_types_v1(KODI_ADDON_PVR_HDL hdl,
                                                   struct PVR_TIMER_TYPE types[],
                                                   size_t* types_count); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_timers_amount_v1(KODI_ADDON_PVR_HDL hdl,
                                                     int* amount); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_get_timers_v1(
      KODI_ADDON_PVR_HDL hdl, KODI_ADDON_PVR_TRANSFER_HDL handle); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_add_timer_v1(KODI_ADDON_PVR_HDL hdl,
                                             const struct PVR_TIMER* timer); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_delete_timer_v1(KODI_ADDON_PVR_HDL hdl,
                                                const struct PVR_TIMER* timer,
                                                bool force_delete); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_update_timer_v1(KODI_ADDON_PVR_HDL hdl,
                                                const struct PVR_TIMER* timer); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_call_timer_menu_hook_v1(
      KODI_ADDON_PVR_HDL hdl,
      const struct PVR_MENUHOOK* menuhook,
      const struct PVR_TIMER* timer); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_on_system_sleep_v1(KODI_ADDON_PVR_HDL hdl); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_on_system_wake_v1(KODI_ADDON_PVR_HDL hdl); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_on_power_saving_activated_v1(
      KODI_ADDON_PVR_HDL hdl); // Added with API 1

  enum PVR_ERROR kodi_addon_pvr_on_power_saving_deactivated_v1(
      KODI_ADDON_PVR_HDL hdl); // Added with API 1


private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static int kodi_addon_pvr_get_epg_max_future_days_v1(void* thisClassHdl,
                                                       KODI_OWN_HDL hdl); // Added with API 1

  static int kodi_addon_pvr_get_epg_max_past_days_v1(void* thisClassHdl,
                                                     KODI_OWN_HDL hdl); // Added with API 1

  static void kodi_addon_pvr_add_menu_hook_v1(void* thisClassHdl,
                                              KODI_OWN_HDL hdl,
                                              const struct PVR_MENUHOOK* hook); // Added with API 1

  static void kodi_addon_pvr_recording_notification_v1(void* thisClassHdl,
                                                       KODI_OWN_HDL hdl,
                                                       const char* name,
                                                       const char* fileName,
                                                       bool on); // Added with API 1

  static void kodi_addon_pvr_connection_state_change_v1(void* thisClassHdl,
                                                        KODI_OWN_HDL hdl,
                                                        const char* strConnectionString,
                                                        enum PVR_CONNECTION_STATE newState,
                                                        const char* strMessage); // Added with API 1

  static void kodi_addon_pvr_epg_event_state_change_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      struct EPG_TAG* tag,
      enum EPG_EVENT_STATE newState); // Added with API 1

  static void kodi_addon_pvr_transfer_channel_entry_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_CHANNEL* chan); // Added with API 1

  static void kodi_addon_pvr_transfer_channel_group_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_CHANNEL_GROUP* group); // Added with API 1

  static void kodi_addon_pvr_transfer_channel_group_member_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_CHANNEL_GROUP_MEMBER* member); // Added with API 1

  static void kodi_addon_pvr_transfer_epg_entry_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct EPG_TAG* epgentry); // Added with API 1

  static void kodi_addon_pvr_transfer_recording_entry_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_RECORDING* recording); // Added with API 1

  static void kodi_addon_pvr_transfer_timer_entry_v1(
      void* thisClassHdl,
      KODI_OWN_HDL hdl,
      const KODI_ADDON_PVR_TRANSFER_HDL handle,
      const struct PVR_TIMER* timer); // Added with API 1

  static void kodi_addon_pvr_trigger_channel_update_v1(void* thisClassHdl,
                                                       KODI_OWN_HDL hdl); // Added with API 1

  static void kodi_addon_pvr_trigger_channel_groups_update_v1(void* thisClassHdl,
                                                              KODI_OWN_HDL hdl); // Added with API 1

  static void kodi_addon_pvr_trigger_epg_update_v1(void* thisClassHdl,
                                                   KODI_OWN_HDL hdl,
                                                   unsigned int iChannelUid); // Added with API 1

  static void kodi_addon_pvr_trigger_recording_update_v1(void* thisClassHdl,
                                                         KODI_OWN_HDL hdl); // Added with API 1

  static void kodi_addon_pvr_trigger_timer_update_v1(void* thisClassHdl,
                                                     KODI_OWN_HDL hdl); // Added with API 1


  directFuncToAddon_addoninstance_pvr_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
