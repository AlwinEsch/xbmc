/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#include "videocodec.h"

// Shared API
#include "addons/kodi-dev-kit/src/shared/api/addon-instance/videocodec.h"

// Kodi
#include "addons/interface/RunningProcess.h"
#include "cores/VideoPlayer/DVDCodecs/Video/AddonVideoCodec.h"
#include "utils/log.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

void CHdl_kodi_addoninstance_videocodec_h::InitDirect(
    directFuncToKodi_addoninstance_videocodec_h* ifcToKodi,
    directFuncToAddon_addoninstance_videocodec_h* ifcToAddon)
{
  ifcToKodi->thisClassHdl = this;
  m_ifcToAddon = ifcToAddon;
  ifcToKodi->kodi_addon_videocodec_get_frame_buffer_v1 = kodi_addon_videocodec_get_frame_buffer_v1;
  ifcToKodi->kodi_addon_videocodec_release_frame_buffer_v1 =
      kodi_addon_videocodec_release_frame_buffer_v1;
}

bool CHdl_kodi_addoninstance_videocodec_h::HandleMessage(int funcGroup,
                                                         int func,
                                                         const msgpack::unpacked& in,
                                                         msgpack::sbuffer& out)
{
  if (funcGroup != funcGroup_addoninstance_videocodec_h)
    return false;

  switch (func)
  {
    /* NOTE: Ignored as direct api only is set! */
    default:
      CLog::Log(LOGERROR,
                "CHdl_kodi_addoninstance_videocodec_h::{}: addon called with unknown function id "
                "'{}' on group 'addoninstance_videocodec_h'",
                __func__, func);
  }

  return false;
}

// Function calls from Kodi to addon

KODI_ADDON_VIDEOCODEC_HDL CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_create_v1(
    KODI_OWN_HDL kodi_hdl)
{
  // Original API call: typedef KODI_ADDON_VIDEOCODEC_HDL(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_CREATE_V1)(KODI_OWN_HDL kodi_hdl);

  return m_ifcToAddon->kodi_addon_videocodec_create_v1(m_ifcToAddon->thisClassHdl, kodi_hdl);
}

void CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_destroy_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl)
{
  // Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_DESTROY_V1)(KODI_ADDON_VIDEOCODEC_HDL hdl);

  m_ifcToAddon->kodi_addon_videocodec_destroy_v1(m_ifcToAddon->thisClassHdl, hdl);
}

bool CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_open_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_INITDATA* initData)
{
  // Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_OPEN_V1)(KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_INITDATA* initData);

  return m_ifcToAddon->kodi_addon_videocodec_open_v1(m_ifcToAddon->thisClassHdl, hdl, initData);
}

bool CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_reconfigure_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_INITDATA* initData)
{
  // Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_RECONFIGURE_V1)( KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_INITDATA* initData);

  return m_ifcToAddon->kodi_addon_videocodec_reconfigure_v1(m_ifcToAddon->thisClassHdl, hdl,
                                                            initData);
}

bool CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_add_data_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl, const struct DEMUX_PACKET* packet)
{
  // Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_ADD_DATA_V1)(KODI_ADDON_VIDEOCODEC_HDL hdl, const struct DEMUX_PACKET* packet);

  return m_ifcToAddon->kodi_addon_videocodec_add_data_v1(m_ifcToAddon->thisClassHdl, hdl, packet);
}

enum VIDEOCODEC_RETVAL CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_get_picture_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_PICTURE* picture)
{
  // Original API call: typedef enum VIDEOCODEC_RETVAL(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_GET_PICTURE_V1)( KODI_ADDON_VIDEOCODEC_HDL hdl, struct VIDEOCODEC_PICTURE* picture);

  return m_ifcToAddon->kodi_addon_videocodec_get_picture_v1(m_ifcToAddon->thisClassHdl, hdl,
                                                            picture);
}

const char* CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_get_name_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl)
{
  // Original API call: typedef const char*(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_GET_NAME_V1)(KODI_ADDON_VIDEOCODEC_HDL hdl);

  return m_ifcToAddon->kodi_addon_videocodec_get_name_v1(m_ifcToAddon->thisClassHdl, hdl);
}

void CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_reset_v1(
    KODI_ADDON_VIDEOCODEC_HDL hdl)
{
  // Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_VIDEOCODEC_RESET_V1)(KODI_ADDON_VIDEOCODEC_HDL hdl);

  m_ifcToAddon->kodi_addon_videocodec_reset_v1(m_ifcToAddon->thisClassHdl, hdl);
}

// Callbacks from addon to Kodi

bool CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_get_frame_buffer_v1(
    void* thisClassHdl, KODI_OWN_HDL hdl, struct VIDEOCODEC_PICTURE* picture)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_addoninstance_videocodec_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return false;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_ADDON_VIDEOCODEC_GET_FRAME_BUFFER>---*/
  // AUTOGENERATED - Used by class "CAddonVideoCodec" with "bool GetFrameBuffer(VIDEOCODEC_PICTURE* picture)" on "cores/VideoPlayer/DVDCodecs/Video/AddonVideoCodec.h".

  CAddonVideoCodec* cb = static_cast<CAddonVideoCodec*>(hdl);
  return cb->GetFrameBuffer(picture);
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_ADDON_VIDEOCODEC_GET_FRAME_BUFFER_END>---*/
}

void CHdl_kodi_addoninstance_videocodec_h::kodi_addon_videocodec_release_frame_buffer_v1(
    void* thisClassHdl, KODI_OWN_HDL hdl, struct VIDEOCODEC_PICTURE* picture)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_addoninstance_videocodec_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_ADDON_VIDEOCODEC_RELEASE_FRAME_BUFFER>---*/
  // AUTOGENERATED - Used by class "CAddonVideoCodec" with "void ReleaseFrameBuffer(KODI_HANDLE videoBufferHandle)" on "cores/VideoPlayer/DVDCodecs/Video/AddonVideoCodec.h".

  CAddonVideoCodec* cb = static_cast<CAddonVideoCodec*>(hdl);
  cb->ReleaseFrameBuffer(picture);
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_ADDON_VIDEOCODEC_RELEASE_FRAME_BUFFER_END>---*/
}

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
