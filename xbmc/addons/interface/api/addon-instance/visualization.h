/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/addon-instance/visualization.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addoninstance_visualization_h;
struct directFuncToKodi_addoninstance_visualization_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_addoninstance_visualization_h : public IMsgHdl
{
public:
  CHdl_kodi_addoninstance_visualization_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_addoninstance_visualization_h* ifcToKodi,
                  directFuncToAddon_addoninstance_visualization_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon
  KODI_ADDON_VISUALIZATION_HDL kodi_addon_visualization_create_v1(
      KODI_OWN_HDL kodi_hdl); // Added with API 1

  void kodi_addon_visualization_destroy_v1(KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_start_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                         int channels,
                                         int samples_per_sec,
                                         int bits_per_sample,
                                         const char* song_name); // Added with API 1

  void kodi_addon_visualization_stop_v1(KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  void kodi_addon_visualization_get_info_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                            struct VIS_INFO* info); // Added with API 1

  void kodi_addon_visualization_audio_data_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                              const float* audio_data,
                                              size_t audio_data_length,
                                              const float* freq_data,
                                              size_t freq_data_length); // Added with API 1

  bool kodi_addon_visualization_is_dirty_v1(KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  void kodi_addon_visualization_render_v1(KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  unsigned int kodi_addon_visualization_get_presets_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  int kodi_addon_visualization_get_active_preset_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_prev_preset_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_next_preset_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_load_preset_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                               int select); // Added with API 1

  bool kodi_addon_visualization_random_preset_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_lock_preset_v1(
      KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_rate_preset_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                               bool plus_minus); // Added with API 1

  bool kodi_addon_visualization_is_locked_v1(KODI_ADDON_VISUALIZATION_HDL hdl); // Added with API 1

  bool kodi_addon_visualization_update_albumart_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                                   const char* albumart); // Added with API 1

  bool kodi_addon_visualization_update_track_v1(KODI_ADDON_VISUALIZATION_HDL hdl,
                                                const struct VIS_TRACK* track); // Added with API 1


private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static void kodi_addon_visualization_get_properties_v1(
      void* thisClassHdl, KODI_OWN_HDL hdl, struct VIS_PROPS* props); // Added with API 1

  static void kodi_addon_visualization_transfer_preset_v1(void* thisClassHdl,
                                                          KODI_OWN_HDL hdl,
                                                          const char* preset); // Added with API 1

  static void kodi_addon_visualization_clear_presets_v1(void* thisClassHdl,
                                                        KODI_OWN_HDL hdl); // Added with API 1


  directFuncToAddon_addoninstance_visualization_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
