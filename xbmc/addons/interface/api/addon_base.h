/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/addon_base.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addon_base_h;
struct directFuncToKodi_addon_base_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_addon_base_h : public IMsgHdl
{
public:
  CHdl_kodi_addon_base_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_addon_base_h* ifcToKodi,
                  directFuncToAddon_addon_base_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_CREATE_V1>---*/
  enum ADDON_STATUS kodi_addon_create_v1(KODI_ADDON_HDL* hdl);
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_CREATE_V1_END>---*/

  void kodi_addon_destroy_v1(KODI_ADDON_HDL hdl); // Added with API 1

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_CREATE_INSTANCE_V1>---*/
  enum ADDON_STATUS kodi_addon_create_instance_v1(KODI_ADDON_HDL hdl,
                                                  ADDON_INSTANCE instanceType,
                                                  const std::string& instanceID,
                                                  KODI_OWN_HDL instance,
                                                  KODI_HANDLE* addonInstance,
                                                  KODI_HANDLE parent);
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_CREATE_INSTANCE_V1_END>---*/

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_DESTROY_INSTANCE_V1>---*/
  void kodi_addon_destroy_instance_v1(const KODI_ADDON_HDL hdl,
                                      ADDON_INSTANCE instanceType,
                                      KODI_HANDLE instance);
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD=KODI_ADDON_DESTROY_INSTANCE_V1_END>---*/

  enum ADDON_STATUS kodi_addon_setting_change_string_v1(const KODI_ADDON_HDL hdl,
                                                        const char* name,
                                                        const char* value); // Added with API 1

  enum ADDON_STATUS kodi_addon_setting_change_boolean_v1(const KODI_ADDON_HDL hdl,
                                                         const char* name,
                                                         bool value); // Added with API 1

  enum ADDON_STATUS kodi_addon_setting_change_integer_v1(const KODI_ADDON_HDL hdl,
                                                         const char* name,
                                                         int value); // Added with API 1

  enum ADDON_STATUS kodi_addon_setting_change_float_v1(const KODI_ADDON_HDL hdl,
                                                       const char* name,
                                                       float value); // Added with API 1


private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static void kodi_log_v1(void* thisClassHdl,
                          enum ADDON_LOG loglevel,
                          const char* format,
                          ...); // Added with API 1

  static char* kodi_addon_get_lib_path_v1(void* thisClassHdl); // Added with API 1

  static char* kodi_addon_get_share_path_v1(void* thisClassHdl); // Added with API 1

  static char* kodi_addon_get_user_path_v1(void* thisClassHdl); // Added with API 1

  static char* kodi_addon_get_temp_path_v1(void* thisClassHdl); // Added with API 1

  static char* kodi_addon_get_info_v1(void* thisClassHdl, const char* id); // Added with API 1

  static bool kodi_addon_open_settings_dialog_v1(void* thisClassHdl); // Added with API 1

  static bool kodi_addon_is_setting_using_default_v1(void* thisClassHdl,
                                                     const char* id); // Added with API 1

  static bool kodi_addon_get_setting_bool_v1(void* thisClassHdl,
                                             const char* id,
                                             bool* value); // Added with API 1

  static bool kodi_addon_get_setting_int_v1(void* thisClassHdl,
                                            const char* id,
                                            int* value); // Added with API 1

  static bool kodi_addon_get_setting_float_v1(void* thisClassHdl,
                                              const char* id,
                                              float* value); // Added with API 1

  static bool kodi_addon_get_setting_string_v1(void* thisClassHdl,
                                               const char* id,
                                               char** value); // Added with API 1

  static bool kodi_addon_set_setting_bool_v1(void* thisClassHdl,
                                             const char* id,
                                             bool value); // Added with API 1

  static bool kodi_addon_set_setting_int_v1(void* thisClassHdl,
                                            const char* id,
                                            int value); // Added with API 1

  static bool kodi_addon_set_setting_float_v1(void* thisClassHdl,
                                              const char* id,
                                              float value); // Added with API 1

  static bool kodi_addon_set_setting_string_v1(void* thisClassHdl,
                                               const char* id,
                                               const char* value); // Added with API 1


  directFuncToAddon_addon_base_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
