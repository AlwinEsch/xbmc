/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/audio_engine.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
#include "cores/AudioEngine/Utils/AEChannelData.h"
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_audio_engine_h;
struct directFuncToKodi_audio_engine_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
AEChannel TranslateAEChannelToKodi(AudioEngineChannel channel);
AudioEngineChannel TranslateAEChannelToAddon(AEChannel channel);
AEDataFormat TranslateAEFormatToKodi(AudioEngineDataFormat format);
AudioEngineDataFormat TranslateAEFormatToAddon(AEDataFormat format);
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_audio_engine_h : public IMsgHdl
{
public:
  CHdl_kodi_audio_engine_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_audio_engine_h* ifcToKodi,
                  directFuncToAddon_audio_engine_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon

private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static bool kodi_audioengine_get_current_sink_format_v1(
      void* thisClassHdl, struct AUDIO_ENGINE_FMT* fmt); // Added with API 1

  static bool kodi_audioengine_is_planar_format_v1(
      void* thisClassHdl, enum AudioEngineDataFormat format); // Added with API 1

  static KODI_AE_HDL kodi_audioengine_stream_make_v1(void* thisClassHdl,
                                                     const struct AUDIO_ENGINE_FMT* fmt,
                                                     unsigned int options); // Added with API 1

  static void kodi_audioengine_stream_free_v1(void* thisClassHdl,
                                              KODI_AE_HDL hdl); // Added with API 1

  static unsigned int kodi_audioengine_stream_get_space_v1(void* thisClassHdl,
                                                           KODI_AE_HDL hdl); // Added with API 1

  static unsigned int kodi_audioengine_stream_add_data_v1(
      void* thisClassHdl,
      KODI_AE_HDL hdl,
      uint8_t* const* data,
      size_t planes,
      size_t data_size,
      unsigned int offset,
      unsigned int frames,
      unsigned int frame_size,
      double pts,
      bool hasDownmix,
      double centerMixLevel); // Added with API 1

  static double kodi_audioengine_stream_get_delay_v1(void* thisClassHdl,
                                                     KODI_AE_HDL hdl); // Added with API 1

  static bool kodi_audioengine_stream_is_buffering_v1(void* thisClassHdl,
                                                      KODI_AE_HDL hdl); // Added with API 1

  static double kodi_audioengine_stream_get_cache_time_v1(void* thisClassHdl,
                                                          KODI_AE_HDL hdl); // Added with API 1

  static double kodi_audioengine_stream_get_cache_total_v1(void* thisClassHdl,
                                                           KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_pause_v1(void* thisClassHdl,
                                               KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_resume_v1(void* thisClassHdl,
                                                KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_drain_v1(void* thisClassHdl,
                                               KODI_AE_HDL hdl,
                                               bool wait); // Added with API 1

  static bool kodi_audioengine_stream_is_draining_v1(void* thisClassHdl,
                                                     KODI_AE_HDL hdl); // Added with API 1

  static bool kodi_audioengine_stream_is_drained_v1(void* thisClassHdl,
                                                    KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_flush_v1(void* thisClassHdl,
                                               KODI_AE_HDL hdl); // Added with API 1

  static float kodi_audioengine_stream_get_volume_v1(void* thisClassHdl,
                                                     KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_set_volume_v1(void* thisClassHdl,
                                                    KODI_AE_HDL hdl,
                                                    float volume); // Added with API 1

  static float kodi_audioengine_stream_get_amplification_v1(void* thisClassHdl,
                                                            KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_set_amplification_v1(void* thisClassHdl,
                                                           KODI_AE_HDL hdl,
                                                           float amplify); // Added with API 1

  static unsigned int kodi_audioengine_stream_get_frame_size_v1(
      void* thisClassHdl, KODI_AE_HDL hdl); // Added with API 1

  static unsigned int kodi_audioengine_stream_get_channel_count_v1(
      void* thisClassHdl, KODI_AE_HDL hdl); // Added with API 1

  static unsigned int kodi_audioengine_stream_get_sample_rate_v1(
      void* thisClassHdl, KODI_AE_HDL hdl); // Added with API 1

  static enum AudioEngineDataFormat kodi_audioengine_stream_get_data_format_v1(
      void* thisClassHdl, KODI_AE_HDL hdl); // Added with API 1

  static double kodi_audioengine_stream_get_resample_ratio_v1(void* thisClassHdl,
                                                              KODI_AE_HDL hdl); // Added with API 1

  static void kodi_audioengine_stream_set_resample_ratio_v1(void* thisClassHdl,
                                                            KODI_AE_HDL hdl,
                                                            double ratio); // Added with API 1


  directFuncToAddon_audio_engine_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
