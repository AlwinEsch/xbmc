/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "addons/interface/IMsgHdl.h"

// API include
#include "addons/kodi-dev-kit/include/kodi/c-api/general.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_general_h;
struct directFuncToKodi_general_h;

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

class CHdl_kodi_general_h : public IMsgHdl
{
public:
  CHdl_kodi_general_h(CInterface& interface) : IMsgHdl(interface) {}

  void InitDirect(directFuncToKodi_general_h* ifcToKodi, directFuncToAddon_general_h* ifcToAddon);

  // To handle callbacks from addon by shared sandbox API (static functions below in private becomes used)
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

  // Function calls from Kodi to addon

private:
  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_4_END>---*/

  // Callbacks from addon to Kodi
  static char* kodi_get_localized_string_v1(void* thisClassHdl, long label_id); // Added with API 1

  static void kodi_get_free_mem_v1(void* thisClassHdl,
                                   long* free,
                                   long* total,
                                   bool as_bytes); // Added with API 1

  static char* kodi_unknown_to_utf8_v1(void* thisClassHdl,
                                       const char* source,
                                       bool* ret,
                                       bool failOnBadChar); // Added with API 1

  static char* kodi_get_language_v1(void* thisClassHdl,
                                    enum LangFormats format,
                                    bool region); // Added with API 1

  static void kodi_queue_notification_v1(void* thisClassHdl,
                                         enum QueueMsg type,
                                         const char* header,
                                         const char* message,
                                         const char* imageFile,
                                         unsigned int displayTime,
                                         bool withSound,
                                         unsigned int messageTime); // Added with API 1

  static char* kodi_get_digest_v1(void* thisClassHdl,
                                  enum DigestType type,
                                  const char* text); // Added with API 1

  static char* kodi_get_region_v1(void* thisClassHdl, const char* id); // Added with API 1

  static int kodi_get_global_idle_time_v1(void* thisClassHdl); // Added with API 1

  static bool kodi_is_addon_avilable_v1(void* thisClassHdl,
                                        const char* id,
                                        char** version,
                                        bool* enabled); // Added with API 1

  static void kodi_version_v1(void* thisClassHdl,
                              char** compile_name,
                              int* major,
                              int* minor,
                              char** revision,
                              char** tag,
                              char** tagversion); // Added with API 1

  static char* kodi_get_current_skin_id_v1(void* thisClassHdl); // Added with API 1

  static bool kodi_get_keyboard_layout_v1(void* thisClassHdl,
                                          int modifier_key,
                                          char** layout_name,
                                          struct AddonKeyboardKeyTable* layout); // Added with API 1

  static bool kodi_change_keyboard_layout_v1(void* thisClassHdl,
                                             char** layout_name); // Added with API 1

  static void kodi_play_sfx_v1(void* thisClassHdl,
                               const char* filename,
                               bool use_cached); // Added with API 1

  static void kodi_stop_sfx_v1(void* thisClassHdl); // Added with API 1


  directFuncToAddon_general_h* m_ifcToAddon{nullptr};
};

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
