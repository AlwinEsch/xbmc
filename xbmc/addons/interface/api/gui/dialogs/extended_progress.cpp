/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#include "extended_progress.h"

// Shared API
#include "addons/kodi-dev-kit/src/shared/api/gui/dialogs/extended_progress.h"

// Kodi
#include "addons/interface/RunningProcess.h"
#include "utils/log.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/

#include "dialogs/GUIDialogExtendedProgressBar.h"
#include "guilib/GUIComponent.h"
#include "guilib/GUIWindowManager.h"

/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

void CHdl_kodi_gui_dialogs_extended_progress_h::InitDirect(
    directFuncToKodi_gui_dialogs_extended_progress_h* ifcToKodi,
    directFuncToAddon_gui_dialogs_extended_progress_h* ifcToAddon)
{
  ifcToKodi->thisClassHdl = this;
  m_ifcToAddon = ifcToAddon;
  ifcToKodi->kodi_gui_dialogs_extended_progress_new_dialog_v1 =
      kodi_gui_dialogs_extended_progress_new_dialog_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_delete_dialog_v1 =
      kodi_gui_dialogs_extended_progress_delete_dialog_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_get_title_v1 =
      kodi_gui_dialogs_extended_progress_get_title_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_set_title_v1 =
      kodi_gui_dialogs_extended_progress_set_title_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_get_text_v1 =
      kodi_gui_dialogs_extended_progress_get_text_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_set_text_v1 =
      kodi_gui_dialogs_extended_progress_set_text_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_is_finished_v1 =
      kodi_gui_dialogs_extended_progress_is_finished_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_mark_finished_v1 =
      kodi_gui_dialogs_extended_progress_mark_finished_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_get_percentage_v1 =
      kodi_gui_dialogs_extended_progress_get_percentage_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_set_percentage_v1 =
      kodi_gui_dialogs_extended_progress_set_percentage_v1;
  ifcToKodi->kodi_gui_dialogs_extended_progress_set_progress_v1 =
      kodi_gui_dialogs_extended_progress_set_progress_v1;
}

bool CHdl_kodi_gui_dialogs_extended_progress_h::HandleMessage(int funcGroup,
                                                              int func,
                                                              const msgpack::unpacked& in,
                                                              msgpack::sbuffer& out)
{
  if (funcGroup != funcGroup_gui_dialogs_extended_progress_h)
    return false;

  switch (func)
  {
    case funcParent_kodi_gui_dialogs_extended_progress_new_dialog_v1:
    {
      // Original API call: ATTR_DLL_EXPORT KODI_GUI_HANDLE kodi_gui_dialogs_extended_progress_new_dialog(const char* title) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<std::string> msgParent__IN_kodi_gui_dialogs_extended_progress_new_dialog_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<PtrValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_new_dialog_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_new_dialog_v1 t = in.get().as<decltype(t)>();
      const std::string& title = std::get<0>(t);
      KODI_GUI_HANDLE auto_gen_ret =
          kodi_gui_dialogs_extended_progress_new_dialog_v1(this, title.c_str());
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_extended_progress_new_dialog_v1(
                             PtrValue(auto_gen_ret)));
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_delete_dialog_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_delete_dialog(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_delete_dialog_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_delete_dialog_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_delete_dialog_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      kodi_gui_dialogs_extended_progress_delete_dialog_v1(this, handle);
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_get_title_v1:
    {
      // Original API call: ATTR_DLL_EXPORT char* kodi_gui_dialogs_extended_progress_get_title(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_get_title_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<std::string> msgParent_OUT_kodi_gui_dialogs_extended_progress_get_title_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_get_title_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      char* auto_gen_ret = kodi_gui_dialogs_extended_progress_get_title_v1(this, handle);
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_extended_progress_get_title_v1(
                             auto_gen_ret ? auto_gen_ret : ""));
      if (auto_gen_ret)
        free(auto_gen_ret);
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_set_title_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_set_title(KODI_GUI_HANDLE handle, const char* title) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, std::string> msgParent__IN_kodi_gui_dialogs_extended_progress_set_title_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_set_title_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_set_title_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      const std::string& title = std::get<1>(t);
      kodi_gui_dialogs_extended_progress_set_title_v1(this, handle, title.c_str());
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_get_text_v1:
    {
      // Original API call: ATTR_DLL_EXPORT char* kodi_gui_dialogs_extended_progress_get_text(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_get_text_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<std::string> msgParent_OUT_kodi_gui_dialogs_extended_progress_get_text_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_get_text_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      char* auto_gen_ret = kodi_gui_dialogs_extended_progress_get_text_v1(this, handle);
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_extended_progress_get_text_v1(
                             auto_gen_ret ? auto_gen_ret : ""));
      if (auto_gen_ret)
        free(auto_gen_ret);
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_set_text_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_set_text(KODI_GUI_HANDLE handle, const char* text) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, std::string> msgParent__IN_kodi_gui_dialogs_extended_progress_set_text_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_set_text_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_set_text_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      const std::string& text = std::get<1>(t);
      kodi_gui_dialogs_extended_progress_set_text_v1(this, handle, text.c_str());
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_is_finished_v1:
    {
      // Original API call: ATTR_DLL_EXPORT bool kodi_gui_dialogs_extended_progress_is_finished(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_is_finished_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<bool> msgParent_OUT_kodi_gui_dialogs_extended_progress_is_finished_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_is_finished_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      bool auto_gen_ret = kodi_gui_dialogs_extended_progress_is_finished_v1(this, handle);
      msgpack::pack(out,
                    msgParent_OUT_kodi_gui_dialogs_extended_progress_is_finished_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_mark_finished_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_mark_finished(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_mark_finished_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_mark_finished_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_mark_finished_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      kodi_gui_dialogs_extended_progress_mark_finished_v1(this, handle);
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_get_percentage_v1:
    {
      // Original API call: ATTR_DLL_EXPORT float kodi_gui_dialogs_extended_progress_get_percentage(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_extended_progress_get_percentage_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<float> msgParent_OUT_kodi_gui_dialogs_extended_progress_get_percentage_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_get_percentage_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      float auto_gen_ret = kodi_gui_dialogs_extended_progress_get_percentage_v1(this, handle);
      msgpack::pack(
          out, msgParent_OUT_kodi_gui_dialogs_extended_progress_get_percentage_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_set_percentage_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_set_percentage(KODI_GUI_HANDLE handle, float percentage) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, float> msgParent__IN_kodi_gui_dialogs_extended_progress_set_percentage_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_set_percentage_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_set_percentage_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      float percentage = std::get<1>(t);
      kodi_gui_dialogs_extended_progress_set_percentage_v1(this, handle, percentage);
      return true;
    }
    case funcParent_kodi_gui_dialogs_extended_progress_set_progress_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_extended_progress_set_progress(KODI_GUI_HANDLE handle, int currentItem, int itemCount) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, int, int> msgParent__IN_kodi_gui_dialogs_extended_progress_set_progress_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_extended_progress_set_progress_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_extended_progress_set_progress_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      int currentItem = std::get<1>(t);
      int itemCount = std::get<2>(t);
      kodi_gui_dialogs_extended_progress_set_progress_v1(this, handle, currentItem, itemCount);
      return true;
    }
    default:
      CLog::Log(LOGERROR,
                "CHdl_kodi_gui_dialogs_extended_progress_h::{}: addon called with unknown function "
                "id '{}' on group 'gui_dialogs_extended_progress_h'",
                __func__, func);
  }

  return false;
}

// Function calls from Kodi to addon
/* NOTE: unused (no functions here) */

// Callbacks from addon to Kodi

KODI_GUI_HANDLE CHdl_kodi_gui_dialogs_extended_progress_h::
    kodi_gui_dialogs_extended_progress_new_dialog_v1(void* thisClassHdl, const char* title)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return nullptr;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_NEW_DIALOG>---*/

  // setup the progress dialog
  CGUIDialogExtendedProgressBar* dialog =
      CServiceBroker::GetGUI()->GetWindowManager().GetWindow<CGUIDialogExtendedProgressBar>(
          WINDOW_DIALOG_EXT_PROGRESS);
  if (!dialog)
  {
    CLog::Log(LOGERROR,
              "CHdl_kodi_gui_dialogs_extended_progress_h::{} - invalid handler data , "
              "dialog='{}') on addon '{}'",
              __func__, static_cast<void*>(dialog), thisClass->m_process->GetAddonID());
    return nullptr;
  }

  CGUIDialogProgressBarHandle* dlgProgressHandle = dialog->GetHandle(title);
  return dlgProgressHandle;


  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_NEW_DIALOG_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_delete_dialog_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_DELETE_DIALOG>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->MarkFinished();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_DELETE_DIALOG_END>---*/
}

char* CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_get_title_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return nullptr;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_TITLE>---*/

  return strdup(static_cast<CGUIDialogProgressBarHandle*>(handle)->Title().c_str());

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_TITLE_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_set_title_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, const char* title)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_TITLE>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->SetTitle(title);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_TITLE_END>---*/
}

char* CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_get_text_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return nullptr;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_TEXT>---*/

  return strdup(static_cast<CGUIDialogProgressBarHandle*>(handle)->Text().c_str());

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_TEXT_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_set_text_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, const char* text)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_TEXT>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->SetText(text);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_TEXT_END>---*/
}

bool CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_is_finished_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return false;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_IS_FINISHED>---*/

  return static_cast<CGUIDialogProgressBarHandle*>(handle)->IsFinished();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_IS_FINISHED_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_mark_finished_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_MARK_FINISHED>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->MarkFinished();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_MARK_FINISHED_END>---*/
}

float CHdl_kodi_gui_dialogs_extended_progress_h::
    kodi_gui_dialogs_extended_progress_get_percentage_v1(void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return 0.0f;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_PERCENTAGE>---*/

  return static_cast<CGUIDialogProgressBarHandle*>(handle)->Percentage();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_GET_PERCENTAGE_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::
    kodi_gui_dialogs_extended_progress_set_percentage_v1(void* thisClassHdl,
                                                         KODI_GUI_HANDLE handle,
                                                         float percentage)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_PERCENTAGE>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->SetPercentage(percentage);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_PERCENTAGE_END>---*/
}

void CHdl_kodi_gui_dialogs_extended_progress_h::kodi_gui_dialogs_extended_progress_set_progress_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, int currentItem, int itemCount)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_extended_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_PROGRESS>---*/

  static_cast<CGUIDialogProgressBarHandle*>(handle)->SetProgress(currentItem, itemCount);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_EXTENDED_PROGRESS_SET_PROGRESS_END>---*/
}

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
