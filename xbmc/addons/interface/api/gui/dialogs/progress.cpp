/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#include "progress.h"

// Shared API
#include "addons/kodi-dev-kit/src/shared/api/gui/dialogs/progress.h"

// Kodi
#include "addons/interface/RunningProcess.h"
#include "utils/log.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/

#include "dialogs/GUIDialogProgress.h"
#include "guilib/GUIComponent.h"
#include "guilib/GUIWindowManager.h"
#include "utils/Variant.h"

/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

void CHdl_kodi_gui_dialogs_progress_h::InitDirect(
    directFuncToKodi_gui_dialogs_progress_h* ifcToKodi,
    directFuncToAddon_gui_dialogs_progress_h* ifcToAddon)
{
  ifcToKodi->thisClassHdl = this;
  m_ifcToAddon = ifcToAddon;
  ifcToKodi->kodi_gui_dialogs_progress_new_dialog_v1 = kodi_gui_dialogs_progress_new_dialog_v1;
  ifcToKodi->kodi_gui_dialogs_progress_delete_dialog_v1 =
      kodi_gui_dialogs_progress_delete_dialog_v1;
  ifcToKodi->kodi_gui_dialogs_progress_open_v1 = kodi_gui_dialogs_progress_open_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_heading_v1 = kodi_gui_dialogs_progress_set_heading_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_line_v1 = kodi_gui_dialogs_progress_set_line_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_can_cancel_v1 =
      kodi_gui_dialogs_progress_set_can_cancel_v1;
  ifcToKodi->kodi_gui_dialogs_progress_is_canceled_v1 = kodi_gui_dialogs_progress_is_canceled_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_percentage_v1 =
      kodi_gui_dialogs_progress_set_percentage_v1;
  ifcToKodi->kodi_gui_dialogs_progress_get_percentage_v1 =
      kodi_gui_dialogs_progress_get_percentage_v1;
  ifcToKodi->kodi_gui_dialogs_progress_show_progress_bar_v1 =
      kodi_gui_dialogs_progress_show_progress_bar_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_progress_max_v1 =
      kodi_gui_dialogs_progress_set_progress_max_v1;
  ifcToKodi->kodi_gui_dialogs_progress_set_progress_advance_v1 =
      kodi_gui_dialogs_progress_set_progress_advance_v1;
  ifcToKodi->kodi_gui_dialogs_progress_abort_v1 = kodi_gui_dialogs_progress_abort_v1;
}

bool CHdl_kodi_gui_dialogs_progress_h::HandleMessage(int funcGroup,
                                                     int func,
                                                     const msgpack::unpacked& in,
                                                     msgpack::sbuffer& out)
{
  if (funcGroup != funcGroup_gui_dialogs_progress_h)
    return false;

  switch (func)
  {
    case funcParent_kodi_gui_dialogs_progress_new_dialog_v1:
    {
      // Original API call: ATTR_DLL_EXPORT KODI_GUI_HANDLE kodi_gui_dialogs_progress_new_dialog() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_dialogs_progress_new_dialog_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<PtrValue> msgParent_OUT_kodi_gui_dialogs_progress_new_dialog_v1; /* Autogenerated */
      KODI_GUI_HANDLE auto_gen_ret = kodi_gui_dialogs_progress_new_dialog_v1(this);
      msgpack::pack(out,
                    msgParent_OUT_kodi_gui_dialogs_progress_new_dialog_v1(PtrValue(auto_gen_ret)));
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_delete_dialog_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_delete_dialog(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_progress_delete_dialog_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_delete_dialog_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_delete_dialog_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      kodi_gui_dialogs_progress_delete_dialog_v1(this, handle);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_open_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_open(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_progress_open_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_open_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_open_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      kodi_gui_dialogs_progress_open_v1(this, handle);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_heading_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_heading(KODI_GUI_HANDLE handle, const char* heading) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, std::string> msgParent__IN_kodi_gui_dialogs_progress_set_heading_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_heading_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_heading_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      const std::string& heading = std::get<1>(t);
      kodi_gui_dialogs_progress_set_heading_v1(this, handle, heading.c_str());
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_line_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_line(KODI_GUI_HANDLE handle, unsigned int line_no, const char* line) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, unsigned int, std::string> msgParent__IN_kodi_gui_dialogs_progress_set_line_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_line_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_line_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      unsigned int line_no = std::get<1>(t);
      const std::string& line = std::get<2>(t);
      kodi_gui_dialogs_progress_set_line_v1(this, handle, line_no, line.c_str());
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_can_cancel_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_can_cancel(KODI_GUI_HANDLE handle, bool can_cancel) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, bool> msgParent__IN_kodi_gui_dialogs_progress_set_can_cancel_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_can_cancel_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_can_cancel_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      bool can_cancel = std::get<1>(t);
      kodi_gui_dialogs_progress_set_can_cancel_v1(this, handle, can_cancel);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_is_canceled_v1:
    {
      // Original API call: ATTR_DLL_EXPORT bool kodi_gui_dialogs_progress_is_canceled(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_progress_is_canceled_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<bool> msgParent_OUT_kodi_gui_dialogs_progress_is_canceled_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_is_canceled_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      bool auto_gen_ret = kodi_gui_dialogs_progress_is_canceled_v1(this, handle);
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_progress_is_canceled_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_percentage_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_percentage(KODI_GUI_HANDLE handle, int percentage) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, int> msgParent__IN_kodi_gui_dialogs_progress_set_percentage_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_percentage_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_percentage_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      int percentage = std::get<1>(t);
      kodi_gui_dialogs_progress_set_percentage_v1(this, handle, percentage);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_get_percentage_v1:
    {
      // Original API call: ATTR_DLL_EXPORT int kodi_gui_dialogs_progress_get_percentage(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_progress_get_percentage_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<int> msgParent_OUT_kodi_gui_dialogs_progress_get_percentage_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_get_percentage_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      int auto_gen_ret = kodi_gui_dialogs_progress_get_percentage_v1(this, handle);
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_progress_get_percentage_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_show_progress_bar_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_show_progress_bar(KODI_GUI_HANDLE handle, bool on_off) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, bool> msgParent__IN_kodi_gui_dialogs_progress_show_progress_bar_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_show_progress_bar_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_show_progress_bar_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      bool on_off = std::get<1>(t);
      kodi_gui_dialogs_progress_show_progress_bar_v1(this, handle, on_off);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_progress_max_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_progress_max(KODI_GUI_HANDLE handle, int max) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, int> msgParent__IN_kodi_gui_dialogs_progress_set_progress_max_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_progress_max_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_progress_max_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      int max = std::get<1>(t);
      kodi_gui_dialogs_progress_set_progress_max_v1(this, handle, max);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_set_progress_advance_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_dialogs_progress_set_progress_advance(KODI_GUI_HANDLE handle, int n_steps) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue, int> msgParent__IN_kodi_gui_dialogs_progress_set_progress_advance_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_dialogs_progress_set_progress_advance_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_set_progress_advance_v1 t =
          in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      int n_steps = std::get<1>(t);
      kodi_gui_dialogs_progress_set_progress_advance_v1(this, handle, n_steps);
      return true;
    }
    case funcParent_kodi_gui_dialogs_progress_abort_v1:
    {
      // Original API call: ATTR_DLL_EXPORT bool kodi_gui_dialogs_progress_abort(KODI_GUI_HANDLE handle) __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<PtrValue> msgParent__IN_kodi_gui_dialogs_progress_abort_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<bool> msgParent_OUT_kodi_gui_dialogs_progress_abort_v1; /* Autogenerated */
      msgParent__IN_kodi_gui_dialogs_progress_abort_v1 t = in.get().as<decltype(t)>();
      KODI_GUI_HANDLE handle = reinterpret_cast<KODI_GUI_HANDLE>(std::get<0>(t));
      bool auto_gen_ret = kodi_gui_dialogs_progress_abort_v1(this, handle);
      msgpack::pack(out, msgParent_OUT_kodi_gui_dialogs_progress_abort_v1(auto_gen_ret));
      return true;
    }
    default:
      CLog::Log(LOGERROR,
                "CHdl_kodi_gui_dialogs_progress_h::{}: addon called with unknown function id '{}' "
                "on group 'gui_dialogs_progress_h'",
                __func__, func);
  }

  return false;
}

// Function calls from Kodi to addon
/* NOTE: unused (no functions here) */

// Callbacks from addon to Kodi

KODI_GUI_HANDLE CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_new_dialog_v1(
    void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return nullptr;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_NEW_DIALOG>---*/
  // Code below must be set manually by hand to make work to Kodi

  CGUIDialogProgress* dialog =
      CServiceBroker::GetGUI()->GetWindowManager().GetWindow<CGUIDialogProgress>(
          WINDOW_DIALOG_PROGRESS);
  if (!dialog)
  {
    CLog::Log(
        LOGERROR,
        "CHdl_kodi_gui_dialogs_progress_h::{} - invalid handler data (dialog='{}') on addon '{}'",
        __func__, static_cast<void*>(dialog), thisClass->m_process->GetAddonID());
    return nullptr;
  }

  return dialog;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_NEW_DIALOG_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_delete_dialog_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_DELETE_DIALOG>---*/

  static_cast<CGUIDialogProgress*>(handle)->Close();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_DELETE_DIALOG_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_open_v1(void* thisClassHdl,
                                                                         KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_OPEN>---*/

  static_cast<CGUIDialogProgress*>(handle)->Open();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_OPEN_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_heading_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, const char* heading)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_HEADING>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetHeading(heading);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_HEADING_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_line_v1(void* thisClassHdl,
                                                                             KODI_GUI_HANDLE handle,
                                                                             unsigned int line_no,
                                                                             const char* line)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_LINE>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetLine(line_no, line);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_LINE_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_can_cancel_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, bool can_cancel)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_CAN_CANCEL>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetCanCancel(can_cancel);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_CAN_CANCEL_END>---*/
}

bool CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_is_canceled_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return false;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_IS_CANCELED>---*/

  return static_cast<CGUIDialogProgress*>(handle)->IsCanceled();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_IS_CANCELED_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_percentage_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, int percentage)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PERCENTAGE>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetPercentage(percentage);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PERCENTAGE_END>---*/
}

int CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_get_percentage_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return -1;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_GET_PERCENTAGE>---*/

  return static_cast<CGUIDialogProgress*>(handle)->GetPercentage();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_GET_PERCENTAGE_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_show_progress_bar_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, bool on_off)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SHOW_PROGRESS_BAR>---*/

  static_cast<CGUIDialogProgress*>(handle)->ShowProgressBar(on_off);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SHOW_PROGRESS_BAR_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_progress_max_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, int max)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PROGRESS_MAX>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetProgressMax(max);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PROGRESS_MAX_END>---*/
}

void CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_set_progress_advance_v1(
    void* thisClassHdl, KODI_GUI_HANDLE handle, int n_steps)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PROGRESS_ADVANCE>---*/

  static_cast<CGUIDialogProgress*>(handle)->SetProgressAdvance(n_steps);

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_SET_PROGRESS_ADVANCE_END>---*/
}

bool CHdl_kodi_gui_dialogs_progress_h::kodi_gui_dialogs_progress_abort_v1(void* thisClassHdl,
                                                                          KODI_GUI_HANDLE handle)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_dialogs_progress_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return false;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_ABORT>---*/

  return static_cast<CGUIDialogProgress*>(handle)->Abort();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_DIALOGS_PROGRESS_ABORT_END>---*/
}

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
