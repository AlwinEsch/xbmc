/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#include "general.h"

// Shared API
#include "addons/kodi-dev-kit/src/shared/api/gui/general.h"

// Kodi
#include "addons/interface/RunningProcess.h"
#include "utils/log.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/

#include "ServiceBroker.h"
#include "guilib/GUIComponent.h"
#include "guilib/GUIWindowManager.h"

/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/

int CHdl_kodi_gui_general_h::m_iAddonGUILockRef = 0;

/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

void CHdl_kodi_gui_general_h::InitDirect(directFuncToKodi_gui_general_h* ifcToKodi,
                                         directFuncToAddon_gui_general_h* ifcToAddon)
{
  ifcToKodi->thisClassHdl = this;
  m_ifcToAddon = ifcToAddon;
  ifcToKodi->kodi_gui_lock_v1 = kodi_gui_lock_v1;
  ifcToKodi->kodi_gui_unlock_v1 = kodi_gui_unlock_v1;
  ifcToKodi->kodi_gui_get_screen_height_v1 = kodi_gui_get_screen_height_v1;
  ifcToKodi->kodi_gui_get_screen_width_v1 = kodi_gui_get_screen_width_v1;
  ifcToKodi->kodi_gui_get_video_resolution_v1 = kodi_gui_get_video_resolution_v1;
  ifcToKodi->kodi_gui_get_current_window_dialog_id_v1 = kodi_gui_get_current_window_dialog_id_v1;
  ifcToKodi->kodi_gui_get_current_window_id_v1 = kodi_gui_get_current_window_id_v1;
  ifcToKodi->kodi_gui_get_hw_context_v1 = kodi_gui_get_hw_context_v1;
}

bool CHdl_kodi_gui_general_h::HandleMessage(int funcGroup,
                                            int func,
                                            const msgpack::unpacked& in,
                                            msgpack::sbuffer& out)
{
  if (funcGroup != funcGroup_gui_general_h)
    return false;

  switch (func)
  {
    case funcParent_kodi_gui_lock_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_lock() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_lock_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_lock_v1; /* Autogenerated */
      kodi_gui_lock_v1(this);
      return true;
    }
    case funcParent_kodi_gui_unlock_v1:
    {
      // Original API call: ATTR_DLL_EXPORT void kodi_gui_unlock() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_unlock_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<DummyValue> msgParent_OUT_kodi_gui_unlock_v1; /* Autogenerated */
      kodi_gui_unlock_v1(this);
      return true;
    }
    case funcParent_kodi_gui_get_screen_height_v1:
    {
      // Original API call: ATTR_DLL_EXPORT int kodi_gui_get_screen_height() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_screen_height_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<int> msgParent_OUT_kodi_gui_get_screen_height_v1; /* Autogenerated */
      int auto_gen_ret = kodi_gui_get_screen_height_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_screen_height_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_get_screen_width_v1:
    {
      // Original API call: ATTR_DLL_EXPORT int kodi_gui_get_screen_width() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_screen_width_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<int> msgParent_OUT_kodi_gui_get_screen_width_v1; /* Autogenerated */
      int auto_gen_ret = kodi_gui_get_screen_width_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_screen_width_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_get_video_resolution_v1:
    {
      // Original API call: ATTR_DLL_EXPORT float kodi_gui_get_video_resolution() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_video_resolution_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<float> msgParent_OUT_kodi_gui_get_video_resolution_v1; /* Autogenerated */
      float auto_gen_ret = kodi_gui_get_video_resolution_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_video_resolution_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_get_current_window_dialog_id_v1:
    {
      // Original API call: ATTR_DLL_EXPORT int kodi_gui_get_current_window_dialog_id() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_current_window_dialog_id_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<int> msgParent_OUT_kodi_gui_get_current_window_dialog_id_v1; /* Autogenerated */
      int auto_gen_ret = kodi_gui_get_current_window_dialog_id_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_current_window_dialog_id_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_get_current_window_id_v1:
    {
      // Original API call: ATTR_DLL_EXPORT int kodi_gui_get_current_window_id() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_current_window_id_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<int> msgParent_OUT_kodi_gui_get_current_window_id_v1; /* Autogenerated */
      int auto_gen_ret = kodi_gui_get_current_window_id_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_current_window_id_v1(auto_gen_ret));
      return true;
    }
    case funcParent_kodi_gui_get_hw_context_v1:
    {
      // Original API call: ATTR_DLL_EXPORT ADDON_HARDWARE_CONTEXT2 kodi_gui_get_hw_context() __INTRODUCED_IN_KODI(1);
      // Tuple in:          typedef std::tuple<DummyValue> msgParent__IN_kodi_gui_get_hw_context_v1; /* Autogenerated */
      // Tuple out:         typedef std::tuple<PtrValue> msgParent_OUT_kodi_gui_get_hw_context_v1; /* Autogenerated */
      ADDON_HARDWARE_CONTEXT2 auto_gen_ret = kodi_gui_get_hw_context_v1(this);
      msgpack::pack(out, msgParent_OUT_kodi_gui_get_hw_context_v1(PtrValue(auto_gen_ret)));
      return true;
    }
    default:
      CLog::Log(LOGERROR,
                "CHdl_kodi_gui_general_h::{}: addon called with unknown function id '{}' on group "
                "'gui_general_h'",
                __func__, func);
  }

  return false;
}

// Function calls from Kodi to addon
/* NOTE: unused (no functions here) */

// Callbacks from addon to Kodi

void CHdl_kodi_gui_general_h::kodi_gui_lock_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_LOCK>---*/

  lock();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_LOCK_END>---*/
}

void CHdl_kodi_gui_general_h::kodi_gui_unlock_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_UNLOCK>---*/

  unlock();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_UNLOCK_END>---*/
}

int CHdl_kodi_gui_general_h::kodi_gui_get_screen_height_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return -1;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_SCREEN_HEIGHT>---*/

  return CServiceBroker::GetWinSystem()->GetGfxContext().GetHeight();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_SCREEN_HEIGHT_END>---*/
}

int CHdl_kodi_gui_general_h::kodi_gui_get_screen_width_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return -1;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_SCREEN_WIDTH>---*/

  return CServiceBroker::GetWinSystem()->GetGfxContext().GetWidth();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_SCREEN_WIDTH_END>---*/
}

float CHdl_kodi_gui_general_h::kodi_gui_get_video_resolution_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return 0.0f;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_VIDEO_RESOLUTION>---*/

  return (int)CServiceBroker::GetWinSystem()->GetGfxContext().GetVideoResolution();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_VIDEO_RESOLUTION_END>---*/
}

int CHdl_kodi_gui_general_h::kodi_gui_get_current_window_dialog_id_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return -1;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_CURRENT_WINDOW_DIALOG_ID>---*/

  return (int)CServiceBroker::GetWinSystem()->GetGfxContext().GetVideoResolution();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_CURRENT_WINDOW_DIALOG_ID_END>---*/
}

int CHdl_kodi_gui_general_h::kodi_gui_get_current_window_id_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return -1;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_CURRENT_WINDOW_ID>---*/

  CSingleLock gl(CServiceBroker::GetWinSystem()->GetGfxContext());
  return CServiceBroker::GetGUI()->GetWindowManager().GetTopmostModalDialog();

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_CURRENT_WINDOW_ID_END>---*/
}

ADDON_HARDWARE_CONTEXT2 CHdl_kodi_gui_general_h::kodi_gui_get_hw_context_v1(void* thisClassHdl)
{
  auto thisClass = reinterpret_cast<CHdl_kodi_gui_general_h*>(thisClassHdl);
  if (thisClass == nullptr)
    return nullptr;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_HW_CONTEXT>---*/

  return CServiceBroker::GetWinSystem()->GetHWContext();
  ;

  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_KODI_GUI_GET_HW_CONTEXT_END>---*/
}

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3>---*/

void CHdl_kodi_gui_general_h::lock()
{
  if (m_iAddonGUILockRef == 0)
    CServiceBroker::GetWinSystem()->GetGfxContext().lock();
  ++m_iAddonGUILockRef;
}

void CHdl_kodi_gui_general_h::unlock()
{
  if (m_iAddonGUILockRef > 0)
  {
    --m_iAddonGUILockRef;
    if (m_iAddonGUILockRef == 0)
      CServiceBroker::GetWinSystem()->GetGfxContext().unlock();
  }
}

/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_3_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
