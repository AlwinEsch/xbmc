/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "core/IMsgHdl.h"
#include "src/shared/api/addon-instance/game.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addoninstance_game_h;
struct directFuncToKodi_addoninstance_game_h;

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */

namespace KODI_ADDON
{
namespace INTERNAL
{

class ATTR_DLL_LOCAL CHdl_kodi_addoninstance_game_h : public IMsgHdl
{
public:
  CHdl_kodi_addoninstance_game_h(AddonIfc* ifc) : IMsgHdl(ifc) {}

  void InitDirect(KODI::ADDONS::INTERFACE::directFuncToAddon_addoninstance_game_h* ifcToAddon);

#ifndef KODI_INHIBIT_SHARED
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;
#endif /* !KODI_INHIBIT_SHARED */

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

  // Calls from Kodi to addon
  static KODI_ADDON_GAME_HDL kodi_addon_game_create_v1(void* thisClassHdl,
                                                       KODI_OWN_HDL kodi_hdl); // Added with API 1

  static void kodi_addon_game_destroy_v1(void* thisClassHdl,
                                         KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_load_game_v1(void* thisClassHdl,
                                                      const KODI_ADDON_GAME_HDL hdl,
                                                      const char* url); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_load_game_special_v1(void* thisClassHdl,
                                                              const KODI_ADDON_GAME_HDL hdl,
                                                              enum SPECIAL_GAME_TYPE type,
                                                              const char** urls,
                                                              size_t urlCount); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_load_standalone_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_unload_game_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_get_game_timing_v1(
      void* thisClassHdl,
      const KODI_ADDON_GAME_HDL hdl,
      struct game_system_timing* timing_info); // Added with API 1

  static enum GAME_REGION kodi_addon_game_get_region_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static bool kodi_addon_game_requires_game_loop_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_run_frame_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_reset_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_hw_context_reset_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_hw_context_destroy_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static bool kodi_addon_game_has_feature_v1(void* thisClassHdl,
                                             const KODI_ADDON_GAME_HDL hdl,
                                             const char* controller_id,
                                             const char* feature_name); // Added with API 1

  static struct game_input_topology* kodi_addon_game_get_topology_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static void kodi_addon_game_free_topology_v1(
      void* thisClassHdl,
      const KODI_ADDON_GAME_HDL hdl,
      struct game_input_topology* topology); // Added with API 1

  static void kodi_addon_game_set_controller_layouts_v1(
      void* thisClassHdl,
      const KODI_ADDON_GAME_HDL hdl,
      const struct game_controller_layout* controllers,
      size_t controller_count); // Added with API 1

  static bool kodi_addon_game_enable_keyboard_v1(void* thisClassHdl,
                                                 const KODI_ADDON_GAME_HDL hdl,
                                                 bool enable,
                                                 const char* controller_id); // Added with API 1

  static bool kodi_addon_game_enable_mouse_v1(void* thisClassHdl,
                                              const KODI_ADDON_GAME_HDL hdl,
                                              bool enable,
                                              const char* controller_id); // Added with API 1

  static bool kodi_addon_game_connect_controller_v1(void* thisClassHdl,
                                                    const KODI_ADDON_GAME_HDL hdl,
                                                    bool connect,
                                                    const char* port_address,
                                                    const char* controller_id); // Added with API 1

  static bool kodi_addon_game_input_event_v1(
      void* thisClassHdl,
      const KODI_ADDON_GAME_HDL hdl,
      const struct game_input_event* event); // Added with API 1

  static size_t kodi_addon_game_serialize_size_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_serialize_v1(void* thisClassHdl,
                                                      const KODI_ADDON_GAME_HDL hdl,
                                                      uint8_t* data,
                                                      size_t size); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_deserialize_v1(void* thisClassHdl,
                                                        const KODI_ADDON_GAME_HDL hdl,
                                                        const uint8_t* data,
                                                        size_t size); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_cheat_reset_v1(
      void* thisClassHdl, const KODI_ADDON_GAME_HDL hdl); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_get_memory_v1(void* thisClassHdl,
                                                       const KODI_ADDON_GAME_HDL hdl,
                                                       enum GAME_MEMORY type,
                                                       uint8_t** data,
                                                       size_t* size); // Added with API 1

  static enum GAME_ERROR kodi_addon_game_set_cheat_v1(void* thisClassHdl,
                                                      const KODI_ADDON_GAME_HDL hdl,
                                                      unsigned int index,
                                                      bool enabled,
                                                      const char* code); // Added with API 1
};

} /* namespace INTERNAL */
} /* namespace KODI_ADDON */
