/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "core/IMsgHdl.h"
#include "src/shared/api/addon_base.h"

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct directFuncToAddon_addon_base_h;
struct directFuncToKodi_addon_base_h;

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */

namespace KODI_ADDON
{
namespace INTERNAL
{

class ATTR_DLL_LOCAL CHdl_kodi_addon_base_h : public IMsgHdl
{
public:
  CHdl_kodi_addon_base_h(AddonIfc* ifc) : IMsgHdl(ifc) {}

  void InitDirect(KODI::ADDONS::INTERFACE::directFuncToAddon_addon_base_h* ifcToAddon);

#ifndef KODI_INHIBIT_SHARED
  bool HandleMessage(int funcGroup,
                     int func,
                     const msgpack::unpacked& in,
                     msgpack::sbuffer& out) override;
#endif /* !KODI_INHIBIT_SHARED */

  /* Code below becomes on auto generation reused, hand edited parts should included here */
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
  /*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

  // Calls from Kodi to addon
  static enum ADDON_STATUS kodi_addon_create_v1(void* thisClassHdl,
                                                KODI_ADDON_HDL* hdl); // Added with API 1

  static void kodi_addon_destroy_v1(void* thisClassHdl, KODI_ADDON_HDL hdl); // Added with API 1

  static enum ADDON_STATUS kodi_addon_create_instance_v1(void* thisClassHdl,
                                                         KODI_ADDON_HDL hdl,
                                                         ADDON_INSTANCE instanceType,
                                                         const std::string& instanceID,
                                                         KODI_OWN_HDL instance,
                                                         KODI_HANDLE* addonInstance,
                                                         KODI_HANDLE parent); // Added with API 1

  static void kodi_addon_destroy_instance_v1(void* thisClassHdl,
                                             const KODI_ADDON_HDL hdl,
                                             ADDON_INSTANCE instanceType,
                                             KODI_HANDLE instance); // Added with API 1

  static enum ADDON_STATUS kodi_addon_setting_change_string_v1(
      void* thisClassHdl,
      const KODI_ADDON_HDL hdl,
      const char* name,
      const char* value); // Added with API 1

  static enum ADDON_STATUS kodi_addon_setting_change_boolean_v1(void* thisClassHdl,
                                                                const KODI_ADDON_HDL hdl,
                                                                const char* name,
                                                                bool value); // Added with API 1

  static enum ADDON_STATUS kodi_addon_setting_change_integer_v1(void* thisClassHdl,
                                                                const KODI_ADDON_HDL hdl,
                                                                const char* name,
                                                                int value); // Added with API 1

  static enum ADDON_STATUS kodi_addon_setting_change_float_v1(void* thisClassHdl,
                                                              const KODI_ADDON_HDL hdl,
                                                              const char* name,
                                                              float value); // Added with API 1
};

} /* namespace INTERNAL */
} /* namespace KODI_ADDON */
