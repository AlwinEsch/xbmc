/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../include/kodi/c-api/addon-instance/game.h"
#include "src/shared/SharedGroups.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* API struct from 1 to 1 */
typedef struct KODI_ADDON_GAME_FUNC_V1_TO_V1
{
  PFN_KODI_ADDON_GAME_CREATE_V1 create; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_DESTROY_V1 destroy; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_LOAD_GAME_V1 load_game; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_LOAD_GAME_SPECIAL_V1 load_game_special; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_LOAD_STANDALONE_V1 load_standalone; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_UNLOAD_GAME_V1 unload_game; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_GET_GAME_TIMING_V1 get_game_timing; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_GET_REGION_V1 get_region; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_REQUIRES_GAME_LOOP_V1 requires_game_loop; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_RUN_FRAME_V1 run_frame; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_RESET_V1 reset; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_HW_CONTEXT_RESET_V1 hw_context_reset; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_HW_CONTEXT_DESTROY_V1 hw_context_destroy; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_HAS_FEATURE_V1 has_feature; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_GET_TOPOLOGY_V1 get_topology; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_FREE_TOPOLOGY_V1 free_topology; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_SET_CONTROLLER_LAYOUTS_V1
      set_controller_layouts; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_ENABLE_KEYBOARD_V1 enable_keyboard; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_ENABLE_MOUSE_V1 enable_mouse; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_CONNECT_CONTROLLER_V1 connect_controller; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_INPUT_EVENT_V1 input_event; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_SERIALIZE_SIZE_V1 serialize_size; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_SERIALIZE_V1 serialize; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_DESERIALIZE_V1 deserialize; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_CHEAT_RESET_V1 cheat_reset; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_GET_MEMORY_V1 get_memory; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_GAME_SET_CHEAT_V1 set_cheat; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
} KODI_ADDON_GAME_FUNC_V1_TO_V1;

union KODI_ADDON_GAME_FUNC_UNION
{
  struct KODI_ADDON_GAME_FUNC_V1_TO_V1 v1;
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

// Code here relates to direct API calls without use of shared mem from addon to Kodi.
//{{{

typedef KODI_GAME_STREAM_HANDLE(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_OPEN_STREAM_V1)(
    void*, KODI_OWN_HDL, const struct game_stream_properties*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_GET_STREAM_BUFFER_V1)(
    void*,
    KODI_OWN_HDL,
    KODI_GAME_STREAM_HANDLE,
    unsigned int,
    unsigned int,
    struct game_stream_buffer*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_INPUT_EVENT_V1)(
    void*, KODI_OWN_HDL, const struct game_input_event*);
typedef game_proc_address_t(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_HW_GET_PROC_ADDRESS_V1)(
    void*, KODI_OWN_HDL, const char*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_ADD_STREAM_DATA_V1)(
    void*, KODI_OWN_HDL, KODI_GAME_STREAM_HANDLE, const struct game_stream_packet*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_CLOSE_STREAM_V1)(void*,
                                                                         KODI_OWN_HDL,
                                                                         KODI_GAME_STREAM_HANDLE);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_CLOSE_V1)(void*, KODI_OWN_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_RELEASE_STREAM_BUFFER_V1)(
    void*, KODI_OWN_HDL, KODI_GAME_STREAM_HANDLE, struct game_stream_buffer*);

struct directFuncToKodi_addoninstance_game_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_GAME_ADD_STREAM_DATA_V1 kodi_addon_game_add_stream_data_v1;
  PFN_INT_KODI_ADDON_GAME_CLOSE_STREAM_V1 kodi_addon_game_close_stream_v1;
  PFN_INT_KODI_ADDON_GAME_CLOSE_V1 kodi_addon_game_close_v1;
  PFN_INT_KODI_ADDON_GAME_GET_STREAM_BUFFER_V1 kodi_addon_game_get_stream_buffer_v1;
  PFN_INT_KODI_ADDON_GAME_INPUT_EVENT_V1 kodi_addon_game_input_event_v1;
  PFN_INT_KODI_ADDON_GAME_OPEN_STREAM_V1 kodi_addon_game_open_stream_v1;
  PFN_INT_KODI_ADDON_GAME_RELEASE_STREAM_BUFFER_V1 kodi_addon_game_release_stream_buffer_v1;
  PFN_INT_KODI_ADDON_HW_GET_PROC_ADDRESS_V1 kodi_addon_hw_get_proc_address_v1;
};

//}}}

// Code here relates to direct API calls without use of shared mem from Kodi to addon.
//{{{

typedef KODI_ADDON_GAME_HDL(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_CREATE_V1)(void*,
                                                                                  KODI_OWN_HDL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_CONNECT_CONTROLLER_V1)(
    void*, const KODI_ADDON_GAME_HDL, bool, const char*, const char*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_ENABLE_KEYBOARD_V1)(
    void*, const KODI_ADDON_GAME_HDL, bool, const char*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_ENABLE_MOUSE_V1)(void*,
                                                                         const KODI_ADDON_GAME_HDL,
                                                                         bool,
                                                                         const char*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_HAS_FEATURE_V1)(void*,
                                                                        const KODI_ADDON_GAME_HDL,
                                                                        const char*,
                                                                        const char*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_INPUT_EVENT_V1)(
    void*, const KODI_ADDON_GAME_HDL, const struct game_input_event*);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_REQUIRES_GAME_LOOP_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_CHEAT_RESET_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_DESERIALIZE_V1)(
    void*, const KODI_ADDON_GAME_HDL, const uint8_t*, size_t);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_GET_GAME_TIMING_V1)(
    void*, const KODI_ADDON_GAME_HDL, struct game_system_timing*);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_GET_MEMORY_V1)(
    void*, const KODI_ADDON_GAME_HDL, enum GAME_MEMORY, uint8_t**, size_t*);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_HW_CONTEXT_DESTROY_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_HW_CONTEXT_RESET_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_LOAD_GAME_SPECIAL_V1)(
    void*, const KODI_ADDON_GAME_HDL, enum SPECIAL_GAME_TYPE, const char**, size_t);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_LOAD_GAME_V1)(
    void*, const KODI_ADDON_GAME_HDL, const char*);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_LOAD_STANDALONE_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_RESET_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_RUN_FRAME_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_SERIALIZE_V1)(
    void*, const KODI_ADDON_GAME_HDL, uint8_t*, size_t);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_SET_CHEAT_V1)(
    void*, const KODI_ADDON_GAME_HDL, unsigned int, bool, const char*);
typedef enum GAME_ERROR(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_UNLOAD_GAME_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef enum GAME_REGION(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_GET_REGION_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef size_t(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_SERIALIZE_SIZE_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef struct game_input_topology*(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_GET_TOPOLOGY_V1)(
    void*, const KODI_ADDON_GAME_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_DESTROY_V1)(void*, KODI_ADDON_GAME_HDL);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_FREE_TOPOLOGY_V1)(
    void*, const KODI_ADDON_GAME_HDL, struct game_input_topology*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_GAME_SET_CONTROLLER_LAYOUTS_V1)(
    void*, const KODI_ADDON_GAME_HDL, const struct game_controller_layout*, size_t);

struct directFuncToAddon_addoninstance_game_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_GAME_CHEAT_RESET_V1 kodi_addon_game_cheat_reset_v1;
  PFN_INT_KODI_ADDON_GAME_CONNECT_CONTROLLER_V1 kodi_addon_game_connect_controller_v1;
  PFN_INT_KODI_ADDON_GAME_CREATE_V1 kodi_addon_game_create_v1;
  PFN_INT_KODI_ADDON_GAME_DESERIALIZE_V1 kodi_addon_game_deserialize_v1;
  PFN_INT_KODI_ADDON_GAME_DESTROY_V1 kodi_addon_game_destroy_v1;
  PFN_INT_KODI_ADDON_GAME_ENABLE_KEYBOARD_V1 kodi_addon_game_enable_keyboard_v1;
  PFN_INT_KODI_ADDON_GAME_ENABLE_MOUSE_V1 kodi_addon_game_enable_mouse_v1;
  PFN_INT_KODI_ADDON_GAME_FREE_TOPOLOGY_V1 kodi_addon_game_free_topology_v1;
  PFN_INT_KODI_ADDON_GAME_GET_GAME_TIMING_V1 kodi_addon_game_get_game_timing_v1;
  PFN_INT_KODI_ADDON_GAME_GET_MEMORY_V1 kodi_addon_game_get_memory_v1;
  PFN_INT_KODI_ADDON_GAME_GET_REGION_V1 kodi_addon_game_get_region_v1;
  PFN_INT_KODI_ADDON_GAME_GET_TOPOLOGY_V1 kodi_addon_game_get_topology_v1;
  PFN_INT_KODI_ADDON_GAME_HAS_FEATURE_V1 kodi_addon_game_has_feature_v1;
  PFN_INT_KODI_ADDON_GAME_HW_CONTEXT_DESTROY_V1 kodi_addon_game_hw_context_destroy_v1;
  PFN_INT_KODI_ADDON_GAME_HW_CONTEXT_RESET_V1 kodi_addon_game_hw_context_reset_v1;
  PFN_INT_KODI_ADDON_GAME_INPUT_EVENT_V1 kodi_addon_game_input_event_v1;
  PFN_INT_KODI_ADDON_GAME_LOAD_GAME_SPECIAL_V1 kodi_addon_game_load_game_special_v1;
  PFN_INT_KODI_ADDON_GAME_LOAD_GAME_V1 kodi_addon_game_load_game_v1;
  PFN_INT_KODI_ADDON_GAME_LOAD_STANDALONE_V1 kodi_addon_game_load_standalone_v1;
  PFN_INT_KODI_ADDON_GAME_REQUIRES_GAME_LOOP_V1 kodi_addon_game_requires_game_loop_v1;
  PFN_INT_KODI_ADDON_GAME_RESET_V1 kodi_addon_game_reset_v1;
  PFN_INT_KODI_ADDON_GAME_RUN_FRAME_V1 kodi_addon_game_run_frame_v1;
  PFN_INT_KODI_ADDON_GAME_SERIALIZE_SIZE_V1 kodi_addon_game_serialize_size_v1;
  PFN_INT_KODI_ADDON_GAME_SERIALIZE_V1 kodi_addon_game_serialize_v1;
  PFN_INT_KODI_ADDON_GAME_SET_CHEAT_V1 kodi_addon_game_set_cheat_v1;
  PFN_INT_KODI_ADDON_GAME_SET_CONTROLLER_LAYOUTS_V1 kodi_addon_game_set_controller_layouts_v1;
  PFN_INT_KODI_ADDON_GAME_UNLOAD_GAME_V1 kodi_addon_game_unload_game_v1;
};

//}}}

typedef enum funcParent_addoninstance_game_h : int
{
  funcParent_addoninstance_game_h_dummy
} funcParent_addoninstance_game_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES>---*/
/* NOTE: Ignored as direct api only is set! */
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES_END>---*/
// clang-format on

//==============================================================================

typedef enum funcChild_addoninstance_game_h : int
{
  funcChild_addoninstance_game_h_dummy
} funcChild_addoninstance_game_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES>---*/
/* NOTE: Ignored as direct api only is set! */
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES_END>---*/
// clang-format on

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
