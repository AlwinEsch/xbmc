/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../include/kodi/c-api/addon-instance/imagedecoder.h"
#include "src/shared/SharedGroups.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* API struct from 1 to 1 */
typedef struct KODI_ADDON_IMAGEDECODER_FUNC_V1_TO_V1
{
  PFN_KODI_ADDON_IMAGEDECODER_CREATE_V1 create; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_IMAGEDECODER_DESTROY_V1 destroy; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_IMAGEDECODER_LOAD_IMAGE_FROM_MEMORY_V1
      load_image_from_memory; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
  PFN_KODI_ADDON_IMAGEDECODER_DECODE_V1 decode; /*---AUTO<EQUAL_FROM_TO:1_1>---*/
} KODI_ADDON_IMAGEDECODER_FUNC_V1_TO_V1;

union KODI_ADDON_IMAGEDECODER_FUNC_UNION
{
  struct KODI_ADDON_IMAGEDECODER_FUNC_V1_TO_V1 v1;
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

#ifndef MSGPACK_ADD_ENUM_ADDON_IMG_FMT
#define MSGPACK_ADD_ENUM_ADDON_IMG_FMT
MSGPACK_ADD_ENUM(ADDON_IMG_FMT);
#endif

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

// Code here relates to direct API calls without use of shared mem from addon to Kodi.
//{{{

typedef char*(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_IMAGEDECODER_MIMETYPE_V1)(void*, KODI_OWN_HDL);

struct directFuncToKodi_addoninstance_imagedecoder_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_IMAGEDECODER_MIMETYPE_V1 kodi_addon_imagedecoder_mimetype_v1;
};

//}}}

// Code here relates to direct API calls without use of shared mem from Kodi to addon.
//{{{

typedef KODI_ADDON_IMAGEDECODER_HDL(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_IMAGEDECODER_CREATE_V1)(
    void*, KODI_OWN_HDL);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_IMAGEDECODER_DECODE_V1)(
    void*,
    KODI_ADDON_IMAGEDECODER_HDL,
    uint8_t*,
    size_t,
    unsigned int,
    unsigned int,
    unsigned int,
    enum ADDON_IMG_FMT);
typedef bool(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_IMAGEDECODER_LOAD_IMAGE_FROM_MEMORY_V1)(
    void*, KODI_ADDON_IMAGEDECODER_HDL, const uint8_t*, size_t, unsigned int*, unsigned int*);
typedef void(ATTR_INT_APIENTRYP PFN_INT_KODI_ADDON_IMAGEDECODER_DESTROY_V1)(
    void*, KODI_ADDON_IMAGEDECODER_HDL);

struct directFuncToAddon_addoninstance_imagedecoder_h
{
  void* thisClassHdl;
  PFN_INT_KODI_ADDON_IMAGEDECODER_CREATE_V1 kodi_addon_imagedecoder_create_v1;
  PFN_INT_KODI_ADDON_IMAGEDECODER_DECODE_V1 kodi_addon_imagedecoder_decode_v1;
  PFN_INT_KODI_ADDON_IMAGEDECODER_DESTROY_V1 kodi_addon_imagedecoder_destroy_v1;
  PFN_INT_KODI_ADDON_IMAGEDECODER_LOAD_IMAGE_FROM_MEMORY_V1
      kodi_addon_imagedecoder_load_image_from_memory_v1;
};

//}}}

typedef enum funcParent_addoninstance_imagedecoder_h : int
{
  funcParent_kodi_addon_imagedecoder_mimetype_v1,
} funcParent_addoninstance_imagedecoder_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES>---*/
// Original API call: ATTR_DLL_EXPORT char* kodi_addon_imagedecoder_mimetype(KODI_OWN_HDL hdl) __INTRODUCED_IN_KODI(1);
typedef std::tuple<PtrValue> msgParent__IN_kodi_addon_imagedecoder_mimetype_v1; /* Autogenerated */
typedef std::tuple<std::string> msgParent_OUT_kodi_addon_imagedecoder_mimetype_v1; /* Autogenerated */
/*---AUTO_GEN_PARSE<FUNC_PARENT_TUPLES_END>---*/
// clang-format on

//==============================================================================

typedef enum funcChild_addoninstance_imagedecoder_h : int
{
  funcChild_kodi_addon_imagedecoder_create_v1,
  funcChild_kodi_addon_imagedecoder_destroy_v1,
  funcChild_kodi_addon_imagedecoder_load_image_from_memory_v1,
  funcChild_kodi_addon_imagedecoder_decode_v1,
} funcChild_addoninstance_imagedecoder_h;

// clang-format off
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES>---*/
// Original API call: typedef KODI_ADDON_IMAGEDECODER_HDL(ATTR_APIENTRYP PFN_KODI_ADDON_IMAGEDECODER_CREATE_V1)(KODI_OWN_HDL kodi_hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_imagedecoder_create_v1; /* Autogenerated */
typedef std::tuple<PtrValue> msgChild_OUT_kodi_addon_imagedecoder_create_v1; /* Autogenerated */
// Original API call: typedef void(ATTR_APIENTRYP PFN_KODI_ADDON_IMAGEDECODER_DESTROY_V1)(KODI_ADDON_IMAGEDECODER_HDL hdl);
typedef std::tuple<PtrValue> msgChild__IN_kodi_addon_imagedecoder_destroy_v1; /* Autogenerated */
typedef std::tuple<DummyValue> msgChild_OUT_kodi_addon_imagedecoder_destroy_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_IMAGEDECODER_LOAD_IMAGE_FROM_MEMORY_V1)( KODI_ADDON_IMAGEDECODER_HDL hdl, const uint8_t* buffer, size_t buf_size, unsigned int* width, unsigned int* height);
typedef std::tuple<PtrValue, std::vector<uint8_t>, size_t, unsigned int, unsigned int> msgChild__IN_kodi_addon_imagedecoder_load_image_from_memory_v1; /* Autogenerated */
typedef std::tuple<bool, unsigned int, unsigned int> msgChild_OUT_kodi_addon_imagedecoder_load_image_from_memory_v1; /* Autogenerated */
// Original API call: typedef bool(ATTR_APIENTRYP PFN_KODI_ADDON_IMAGEDECODER_DECODE_V1)(KODI_ADDON_IMAGEDECODER_HDL hdl, uint8_t* pixels, size_t pixels_size, unsigned int width, unsigned int height, unsigned int pitch, enum ADDON_IMG_FMT format);
typedef std::tuple<PtrValue, size_t, unsigned int, unsigned int, unsigned int, ADDON_IMG_FMT> msgChild__IN_kodi_addon_imagedecoder_decode_v1; /* Autogenerated */
typedef std::tuple<bool, std::vector<uint8_t>> msgChild_OUT_kodi_addon_imagedecoder_decode_v1; /* Autogenerated */
/*---AUTO_GEN_PARSE<FUNC_CHILD_TUPLES_END>---*/
// clang-format on

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
