/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../../include/kodi/c-api/addon-instance/pvr/pvr_epg.h"
#include "../../../../../src/shared/api/addon-instance/pvr/pvr_defines.h"
#include "src/shared/SharedGroups.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct IFC_EPG_TAG
{
  IFC_EPG_TAG() = default;
  IFC_EPG_TAG(const EPG_TAG* c_data)
  {
    if (c_data == nullptr)
      return;

    iUniqueBroadcastId = c_data->iUniqueBroadcastId;
    iUniqueChannelId = c_data->iUniqueChannelId;
    if (c_data->strTitle)
      strTitle = c_data->strTitle;
    startTime = c_data->startTime;
    endTime = c_data->endTime;
    if (c_data->strPlotOutline)
      strPlotOutline = c_data->strPlotOutline;
    if (c_data->strPlot)
      strPlot = c_data->strPlot;
    if (c_data->strOriginalTitle)
      strOriginalTitle = c_data->strOriginalTitle;
    if (c_data->strCast)
      strCast = c_data->strCast;
    if (c_data->strDirector)
      strDirector = c_data->strDirector;
    if (c_data->strWriter)
      strWriter = c_data->strWriter;
    iYear = c_data->iYear;
    if (c_data->strIMDBNumber)
      strIMDBNumber = c_data->strIMDBNumber;
    if (c_data->strIconPath)
      strIconPath = c_data->strIconPath;
    iGenreType = c_data->iGenreType;
    iGenreSubType = c_data->iGenreSubType;
    if (c_data->strGenreDescription)
      strGenreDescription = c_data->strGenreDescription;
    if (c_data->strFirstAired)
      strFirstAired = c_data->strFirstAired;
    iParentalRating = c_data->iParentalRating;
    iStarRating = c_data->iStarRating;
    iSeriesNumber = c_data->iSeriesNumber;
    iEpisodeNumber = c_data->iEpisodeNumber;
    iEpisodePartNumber = c_data->iEpisodePartNumber;
    if (c_data->strEpisodeName)
      strEpisodeName = c_data->strEpisodeName;
    iFlags = c_data->iFlags;
    if (c_data->strSeriesLink)
      strSeriesLink = c_data->strSeriesLink;
  }

  void SetCStructure(EPG_TAG* c_data)
  {
    if (c_data == nullptr)
      return;

    c_data->iUniqueBroadcastId = iUniqueBroadcastId;
    c_data->iUniqueChannelId = iUniqueChannelId;
    c_data->strTitle = strTitle.c_str();
    c_data->startTime = startTime;
    c_data->endTime = endTime;
    c_data->strPlotOutline = strPlotOutline.c_str();
    c_data->strPlot = strPlot.c_str();
    c_data->strOriginalTitle = strOriginalTitle.c_str();
    c_data->strCast = strCast.c_str();
    c_data->strDirector = strDirector.c_str();
    c_data->strWriter = strWriter.c_str();
    c_data->iYear = iYear;
    c_data->strIMDBNumber = strIMDBNumber.c_str();
    c_data->strIconPath = strIconPath.c_str();
    c_data->iGenreType = iGenreType;
    c_data->iGenreSubType = iGenreSubType;
    c_data->strGenreDescription = strGenreDescription.c_str();
    c_data->strFirstAired = strFirstAired.c_str();
    c_data->iParentalRating = iParentalRating;
    c_data->iStarRating = iStarRating;
    c_data->iSeriesNumber = iSeriesNumber;
    c_data->iEpisodeNumber = iEpisodeNumber;
    c_data->iEpisodePartNumber = iEpisodePartNumber;
    c_data->strEpisodeName = strEpisodeName.c_str();
    c_data->iFlags = iFlags;
    c_data->strSeriesLink = strSeriesLink.c_str();
  }

  unsigned int iUniqueBroadcastId;
  unsigned int iUniqueChannelId;
  std::string strTitle;
  time_t startTime;
  time_t endTime;
  std::string strPlotOutline;
  std::string strPlot;
  std::string strOriginalTitle;
  std::string strCast;
  std::string strDirector;
  std::string strWriter;
  int iYear;
  std::string strIMDBNumber;
  std::string strIconPath;
  int iGenreType;
  int iGenreSubType;
  std::string strGenreDescription;
  std::string strFirstAired;
  int iParentalRating;
  int iStarRating;
  int iSeriesNumber;
  int iEpisodeNumber;
  int iEpisodePartNumber;
  std::string strEpisodeName;
  unsigned int iFlags;
  std::string strSeriesLink;

  MSGPACK_DEFINE(iUniqueBroadcastId,
                 iUniqueChannelId,
                 strTitle,
                 startTime,
                 endTime,
                 strPlotOutline,
                 strPlot,
                 strOriginalTitle,
                 strCast,
                 strDirector,
                 strWriter,
                 iYear,
                 strIMDBNumber,
                 strIconPath,
                 iGenreType,
                 iGenreSubType,
                 strGenreDescription,
                 strFirstAired,
                 iParentalRating,
                 iStarRating,
                 iSeriesNumber,
                 iEpisodeNumber,
                 iEpisodePartNumber,
                 strEpisodeName,
                 iFlags,
                 strSeriesLink);
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
