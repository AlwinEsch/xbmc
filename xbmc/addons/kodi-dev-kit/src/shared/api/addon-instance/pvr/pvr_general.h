/*
 *  Copyright (C) 2005-2021 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

/* File autogenerated, see xbmc/addons/kodi-dev-kit/tools/code-generator/code_generator.py */

#pragma once

#include "../../../../../include/kodi/c-api/addon-instance/pvr/pvr_general.h"
#include "../../../../../src/shared/api/addon-instance/pvr/pvr_defines.h"
#include "src/shared/SharedGroups.h"

#include <string.h>
#include <string>
#include <tuple>
#include <vector>

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_1_END>---*/

namespace KODI
{
namespace ADDONS
{
namespace INTERFACE
{

struct IFC_PVR_ADDON_CAPABILITIES
{
  IFC_PVR_ADDON_CAPABILITIES() = default;
  IFC_PVR_ADDON_CAPABILITIES(const PVR_ADDON_CAPABILITIES* c_data)
  {
    if (c_data == nullptr)
      return;

    bSupportsEPG = c_data->bSupportsEPG;
    bSupportsEPGEdl = c_data->bSupportsEPGEdl;
    bSupportsTV = c_data->bSupportsTV;
    bSupportsRadio = c_data->bSupportsRadio;
    bSupportsRecordings = c_data->bSupportsRecordings;
    bSupportsRecordingsUndelete = c_data->bSupportsRecordingsUndelete;
    bSupportsTimers = c_data->bSupportsTimers;
    bSupportsChannelGroups = c_data->bSupportsChannelGroups;
    bSupportsChannelScan = c_data->bSupportsChannelScan;
    bSupportsChannelSettings = c_data->bSupportsChannelSettings;
    bHandlesInputStream = c_data->bHandlesInputStream;
    bHandlesDemuxing = c_data->bHandlesDemuxing;
    bSupportsRecordingPlayCount = c_data->bSupportsRecordingPlayCount;
    bSupportsLastPlayedPosition = c_data->bSupportsLastPlayedPosition;
    bSupportsRecordingEdl = c_data->bSupportsRecordingEdl;
    bSupportsRecordingsRename = c_data->bSupportsRecordingsRename;
    bSupportsRecordingsLifetimeChange = c_data->bSupportsRecordingsLifetimeChange;
    bSupportsDescrambleInfo = c_data->bSupportsDescrambleInfo;
    bSupportsAsyncEPGTransfer = c_data->bSupportsAsyncEPGTransfer;
    bSupportsRecordingSize = c_data->bSupportsRecordingSize;
    iRecordingsLifetimesSize = c_data->iRecordingsLifetimesSize;
    memcpy(recordingsLifetimeValues.data(), c_data->recordingsLifetimeValues,
           PVR_ADDON_ATTRIBUTE_VALUES_ARRAY_SIZE);
  }

  void SetCStructure(PVR_ADDON_CAPABILITIES* c_data)
  {
    if (c_data == nullptr)
      return;

    c_data->bSupportsEPG = bSupportsEPG;
    c_data->bSupportsEPGEdl = bSupportsEPGEdl;
    c_data->bSupportsTV = bSupportsTV;
    c_data->bSupportsRadio = bSupportsRadio;
    c_data->bSupportsRecordings = bSupportsRecordings;
    c_data->bSupportsRecordingsUndelete = bSupportsRecordingsUndelete;
    c_data->bSupportsTimers = bSupportsTimers;
    c_data->bSupportsChannelGroups = bSupportsChannelGroups;
    c_data->bSupportsChannelScan = bSupportsChannelScan;
    c_data->bSupportsChannelSettings = bSupportsChannelSettings;
    c_data->bHandlesInputStream = bHandlesInputStream;
    c_data->bHandlesDemuxing = bHandlesDemuxing;
    c_data->bSupportsRecordingPlayCount = bSupportsRecordingPlayCount;
    c_data->bSupportsLastPlayedPosition = bSupportsLastPlayedPosition;
    c_data->bSupportsRecordingEdl = bSupportsRecordingEdl;
    c_data->bSupportsRecordingsRename = bSupportsRecordingsRename;
    c_data->bSupportsRecordingsLifetimeChange = bSupportsRecordingsLifetimeChange;
    c_data->bSupportsDescrambleInfo = bSupportsDescrambleInfo;
    c_data->bSupportsAsyncEPGTransfer = bSupportsAsyncEPGTransfer;
    c_data->bSupportsRecordingSize = bSupportsRecordingSize;
    c_data->iRecordingsLifetimesSize = iRecordingsLifetimesSize;
    memcpy(c_data->recordingsLifetimeValues, recordingsLifetimeValues.data(),
           PVR_ADDON_ATTRIBUTE_VALUES_ARRAY_SIZE);
  }

  bool bSupportsEPG;
  bool bSupportsEPGEdl;
  bool bSupportsTV;
  bool bSupportsRadio;
  bool bSupportsRecordings;
  bool bSupportsRecordingsUndelete;
  bool bSupportsTimers;
  bool bSupportsChannelGroups;
  bool bSupportsChannelScan;
  bool bSupportsChannelSettings;
  bool bHandlesInputStream;
  bool bHandlesDemuxing;
  bool bSupportsRecordingPlayCount;
  bool bSupportsLastPlayedPosition;
  bool bSupportsRecordingEdl;
  bool bSupportsRecordingsRename;
  bool bSupportsRecordingsLifetimeChange;
  bool bSupportsDescrambleInfo;
  bool bSupportsAsyncEPGTransfer;
  bool bSupportsRecordingSize;
  unsigned int iRecordingsLifetimesSize;
  std::array<IFC_PVR_ATTRIBUTE_INT_VALUE, PVR_ADDON_ATTRIBUTE_VALUES_ARRAY_SIZE>
      recordingsLifetimeValues;

  MSGPACK_DEFINE(bSupportsEPG,
                 bSupportsEPGEdl,
                 bSupportsTV,
                 bSupportsRadio,
                 bSupportsRecordings,
                 bSupportsRecordingsUndelete,
                 bSupportsTimers,
                 bSupportsChannelGroups,
                 bSupportsChannelScan,
                 bSupportsChannelSettings,
                 bHandlesInputStream,
                 bHandlesDemuxing,
                 bSupportsRecordingPlayCount,
                 bSupportsLastPlayedPosition,
                 bSupportsRecordingEdl,
                 bSupportsRecordingsRename,
                 bSupportsRecordingsLifetimeChange,
                 bSupportsDescrambleInfo,
                 bSupportsAsyncEPGTransfer,
                 bSupportsRecordingSize,
                 iRecordingsLifetimesSize,
                 recordingsLifetimeValues);
};

/* Code below becomes on auto generation reused, hand edited parts should included here */
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2>---*/
/*---AUTO_GEN_PARSE<HAND_EDITED_FIELD_2_END>---*/

} /* namespace INTERFACE */
} /* namespace ADDONS */
} /* namespace KODI */
